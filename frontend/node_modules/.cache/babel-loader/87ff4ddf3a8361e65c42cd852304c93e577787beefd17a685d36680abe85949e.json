{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\SE-LABS-Website\\\\src\\\\component\\\\admin-Component\\\\try-form.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const DynamicForm = ({ frame }) => {\n//   const [formData, setFormData] = useState({});\n//   const [files, setFiles] = useState({});\n\n//   const handleInputChange = (key, value) => {\n//     setFormData((prev) => ({ ...prev, [key]: value }));\n//   };\n\n//   const handleFileChange = (key, file) => {\n//     setFiles((prev) => ({ ...prev, [key]: file }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     let url = frame.url || \"http://127.0.0.1:8000\";\n//     const formBody = new FormData();\n//     const method = frame.type || \"post\";\n\n//     if (frame.param) {\n//       const queryParams = frame.param\n//         .map((param) =>\n//           Object.entries(param)\n//             .map(([key]) => `${key}=${encodeURIComponent(formData[key] || \"\")}`)\n//             .join(\"&\")\n//         )\n//         .join(\"&\");\n\n//       if (queryParams) url += `?${queryParams}`;\n//     }\n\n//     if (frame.body) {\n//       frame.body.forEach((bodyField) => {\n//         if (bodyField.key) {\n//           const valueObject = Object.fromEntries(\n//             Object.entries(bodyField).filter(([key]) => key !== \"key\")\n//           );\n\n//           const bodyObject = {\n//             ...Object.fromEntries(\n//               Object.entries(valueObject).map(([key]) => [\n//                 key,\n//                 formData[key] || \"\",\n//               ])\n//             ),\n//           };\n\n//           // Handle related_laboratory logic\n//           if (bodyField.related_laboratory) {\n//             const { research_id, laboratory_id } = formData;\n\n//             if (laboratory_id) {\n//               bodyObject.related_laboratory = {\n//                 LID: laboratory_id,\n//                 related_research: research_id ? { RID: research_id } : null,\n//               };\n//             } else {\n//               bodyObject.related_laboratory = null;\n//             }\n//           }\n//           console.log(bodyObject);\n//           formBody.append(bodyField.key, JSON.stringify(bodyObject));\n//         } else {\n//           Object.entries(bodyField).forEach(([key, type]) => {\n//             if (type === \"file\" && files[key]) {\n//               formBody.append(key, files[key]);\n//             } else if (formData[key] !== undefined) {\n//               formBody.append(key, formData[key]);\n//             }\n//           });\n//         }\n//       });\n//     }\n\n//     const token = localStorage.getItem(\"token\");\n//     const config = {\n//       headers: {\n//         \"Content-Type\": frame.body ? \"multipart/form-data\" : \"application/json\",\n//         Authorization: `Bearer ${token}`,\n//       },\n//     };\n\n//     try {\n//       let response;\n//       switch (method) {\n//         case \"post\":\n//           response = await axios.post(url, formBody, config);\n//           break;\n//         case \"patch\":\n//           response = await axios.patch(url, formBody, config);\n//           break;\n//         case \"put\":\n//           response = await axios.put(url, formBody, config);\n//           break;\n//         case \"delete\":\n//           response = await axios.delete(url, config);\n//           break;\n//         default:\n//           console.error(\"Unsupported method:\", method);\n//           return;\n//       }\n\n//       console.log(\"Success:\", response.data);\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//     }\n//   };\n\n//   const renderFields = () => {\n//     const fields = [];\n\n//     // Render fields from frame.param\n//     if (frame.param) {\n//       frame.param.forEach((param) => {\n//         Object.entries(param).forEach(([key, type]) => {\n//           fields.push(\n//             <div key={key}>\n//               <label>{key}</label>\n//               <input\n//                 type={type}\n//                 value={type === \"checkbox\" ? false : formData[key] || \"\"}\n//                 onChange={(e) => handleInputChange(key, e.target.value)}\n//               />\n//             </div>\n//           );\n//         });\n//       });\n//     }\n\n//     // Render fields from frame.body\n//     if (frame.body) {\n//       frame.body.forEach((bodyField) => {\n//         if (bodyField.key) {\n//           const valueObject = Object.fromEntries(\n//             Object.entries(bodyField).filter(([key]) => key !== \"key\")\n//           );\n//           Object.keys(valueObject).forEach((key) => {\n//             fields.push(\n//               <>\n//                 {valueObject[key] === \"huh\" ? (\n//                   <></>\n//                 ) : (\n//                   <div key={key}>\n//                     <label>{key}</label>\n//                     <input\n//                       type={\n//                         valueObject[key] === \"textArea\" ? \"textarea\" : \"text\"\n//                       }\n//                       value={formData[key] || \"\"}\n//                       onChange={(e) => handleInputChange(key, e.target.value)}\n//                     />\n//                   </div>\n//                 )}\n//               </>\n//             );\n//           });\n//         } else {\n//           Object.entries(bodyField).forEach(([key, type]) => {\n//             fields.push(\n//               <div key={key}>\n//                 <label>{key}</label>\n//                 {type === \"file\" ? (\n//                   <input\n//                     type=\"file\"\n//                     onChange={(e) => handleFileChange(key, e.target.files[0])}\n//                   />\n//                 ) : type === \"huh\" ? (\n//                   <br />\n//                 ) : (\n//                   <input\n//                     type={type}\n//                     value={formData[key] || \"\"}\n//                     onChange={(e) => handleInputChange(key, e.target.value)}\n//                   />\n//                 )}\n//               </div>\n//             );\n//           });\n//         }\n//       });\n//     }\n\n//     return fields;\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h4>Dynamic Form</h4>\n//       {renderFields()}\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n\n// export default DynamicForm;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { submitFrame } from \"./Modal/input/frame\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicForm = ({\n  frame,\n  data = null,\n  send = null,\n  type = null\n}) => {\n  _s();\n  const [formData, setFormData] = useState({});\n  const [files, setFiles] = useState({});\n\n  // Initialize formData with inherited data\n  useEffect(() => {\n    if (data) {\n      setFormData(data);\n    }\n  }, [data]);\n  const handleInputChange = (key, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const handleFileChange = (key, file) => {\n    setFiles(prev => ({\n      ...prev,\n      [key]: file\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let url = frame.url || \"http://127.0.0.1:8000\";\n    const formBody = new FormData();\n    const method = frame.type || \"post\";\n    if (frame.param) {\n      const queryParams = frame.param.map(param => Object.entries(param).map(([key]) => `${key}=${encodeURIComponent(formData[key] || \"\")}`).join(\"&\")).join(\"&\");\n      if (queryParams) url += `?${queryParams}`;\n    }\n    if (frame.body) {\n      frame.body.forEach(bodyField => {\n        if (bodyField.key) {\n          const valueObject = Object.fromEntries(Object.entries(bodyField).filter(([key]) => key !== \"key\"));\n          const bodyObject = {\n            ...Object.fromEntries(Object.entries(valueObject).map(([key]) => [key, formData[key] || \"\"]))\n          };\n\n          // Handle related_laboratory logic\n          if (bodyField.related_laboratory) {\n            const {\n              research_id,\n              laboratory_id\n            } = formData;\n            if (laboratory_id) {\n              bodyObject.related_laboratory = {\n                LID: laboratory_id,\n                related_research: research_id ? {\n                  RID: research_id\n                } : null\n              };\n            } else {\n              bodyObject.related_laboratory = null;\n            }\n          }\n          formBody.append(bodyField.key, JSON.stringify(bodyObject));\n        } else {\n          Object.entries(bodyField).forEach(([key, type]) => {\n            if (type === \"file\" && files[key]) {\n              formBody.append(key, files[key]);\n            } else if (formData[key] !== undefined) {\n              formBody.append(key, formData[key]);\n            }\n          });\n        }\n      });\n    }\n    const token = localStorage.getItem(\"token\");\n    const config = {\n      headers: {\n        \"Content-Type\": frame.body ? \"multipart/form-data\" : \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    try {\n      let response;\n      switch (method) {\n        case \"post\":\n          response = await axios.post(url, formBody, config);\n          break;\n        case \"patch\":\n          response = await axios.patch(url, formBody, config);\n          break;\n        case \"put\":\n          response = await axios.put(url, formBody, config);\n          break;\n        case \"delete\":\n          response = await axios.delete(url, config);\n          break;\n        default:\n          console.error(\"Unsupported method:\", method);\n          return;\n      }\n      console.log(\"Success:\", response.data);\n      //hereif (send === \"Admin\" || send === \"LeadResearcher\") {\n      if (send === null) return;\n      const commitData = await getCommitData(type);\n\n      // After fetching commit data, patch if necessary\n      if (commitData) {\n        const patchData = {\n          ...commitData,\n          is_approved: true\n        };\n        const patchUrl = type === \"event\" ? submitFrame.submitEvent.url : submitFrame.submitNews.url;\n        const patchParam = type === \"event\" ? {\n          event_id: commitData.event_id\n        } : {\n          news_id: commitData.news_id\n        };\n\n        // Send patch request\n        await axios.patch(patchUrl, patchData, {\n          params: patchParam,\n          headers: config.headers\n        });\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const getCommitData = async type => {\n    const path = type === \"event\" ? `http://127.0.0.1:8000/lead_researcher/event/commit` : `http://127.0.0.1:8000/lead_researcher/news/commit`;\n    try {\n      const response = await axios.get(path, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n\n      // Filter commit data based on NID (News ID) or EID (Event ID)\n      const commitData = type === \"event\" ? response.data.find(item => item.event_id === formData.event_id) : response.data.find(item => item.news_id === formData.news_id);\n      return commitData;\n    } catch (error) {\n      console.error(\"Error fetching commit data:\", error);\n    }\n  };\n  const renderFields = () => {\n    const fields = [];\n\n    // Render fields from frame.param\n    if (frame.param) {\n      frame.param.forEach(param => {\n        Object.entries(param).forEach(([key, type]) => {\n          fields.push(/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: type,\n              value: type === \"checkbox\" ? formData[key] || false : formData[key] || \"\",\n              onChange: e => handleInputChange(key, type === \"checkbox\" ? e.target.checked : e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this));\n        });\n      });\n    }\n\n    // Render fields from frame.body\n    if (frame.body) {\n      frame.body.forEach(bodyField => {\n        if (bodyField.key) {\n          const valueObject = Object.fromEntries(Object.entries(bodyField).filter(([key]) => key !== \"key\"));\n          Object.keys(valueObject).forEach(key => {\n            fields.push(/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: valueObject[key] === \"textArea\" ? \"textarea\" : \"text\",\n                value: formData[key] || \"\",\n                onChange: e => handleInputChange(key, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this));\n          });\n        } else {\n          Object.entries(bodyField).forEach(([key, type]) => {\n            fields.push(/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 17\n              }, this), type === \"file\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: e => handleFileChange(key, e.target.files[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                type: type,\n                value: formData[key] || \"\",\n                onChange: e => handleInputChange(key, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this));\n          });\n        }\n      });\n    }\n    return fields;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Dynamic Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 7\n    }, this), renderFields(), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicForm, \"osExPLxz8VslMLMz/AYt5kYA12o=\");\n_c = DynamicForm;\nexport default DynamicForm;\nvar _c;\n$RefreshReg$(_c, \"DynamicForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","submitFrame","jsxDEV","_jsxDEV","DynamicForm","frame","data","send","type","_s","formData","setFormData","files","setFiles","handleInputChange","key","value","prev","handleFileChange","file","handleSubmit","e","preventDefault","url","formBody","FormData","method","param","queryParams","map","Object","entries","encodeURIComponent","join","body","forEach","bodyField","valueObject","fromEntries","filter","bodyObject","related_laboratory","research_id","laboratory_id","LID","related_research","RID","append","JSON","stringify","undefined","token","localStorage","getItem","config","headers","Authorization","response","post","patch","put","delete","console","error","log","commitData","getCommitData","patchData","is_approved","patchUrl","submitEvent","submitNews","patchParam","event_id","news_id","params","path","get","find","item","renderFields","fields","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","checked","keys","onSubmit","_c","$RefreshReg$"],"sources":["D:/project/SE-LABS-Website/src/component/admin-Component/try-form.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const DynamicForm = ({ frame }) => {\r\n//   const [formData, setFormData] = useState({});\r\n//   const [files, setFiles] = useState({});\r\n\r\n//   const handleInputChange = (key, value) => {\r\n//     setFormData((prev) => ({ ...prev, [key]: value }));\r\n//   };\r\n\r\n//   const handleFileChange = (key, file) => {\r\n//     setFiles((prev) => ({ ...prev, [key]: file }));\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     let url = frame.url || \"http://127.0.0.1:8000\";\r\n//     const formBody = new FormData();\r\n//     const method = frame.type || \"post\";\r\n\r\n//     if (frame.param) {\r\n//       const queryParams = frame.param\r\n//         .map((param) =>\r\n//           Object.entries(param)\r\n//             .map(([key]) => `${key}=${encodeURIComponent(formData[key] || \"\")}`)\r\n//             .join(\"&\")\r\n//         )\r\n//         .join(\"&\");\r\n\r\n//       if (queryParams) url += `?${queryParams}`;\r\n//     }\r\n\r\n//     if (frame.body) {\r\n//       frame.body.forEach((bodyField) => {\r\n//         if (bodyField.key) {\r\n//           const valueObject = Object.fromEntries(\r\n//             Object.entries(bodyField).filter(([key]) => key !== \"key\")\r\n//           );\r\n\r\n//           const bodyObject = {\r\n//             ...Object.fromEntries(\r\n//               Object.entries(valueObject).map(([key]) => [\r\n//                 key,\r\n//                 formData[key] || \"\",\r\n//               ])\r\n//             ),\r\n//           };\r\n\r\n//           // Handle related_laboratory logic\r\n//           if (bodyField.related_laboratory) {\r\n//             const { research_id, laboratory_id } = formData;\r\n\r\n//             if (laboratory_id) {\r\n//               bodyObject.related_laboratory = {\r\n//                 LID: laboratory_id,\r\n//                 related_research: research_id ? { RID: research_id } : null,\r\n//               };\r\n//             } else {\r\n//               bodyObject.related_laboratory = null;\r\n//             }\r\n//           }\r\n//           console.log(bodyObject);\r\n//           formBody.append(bodyField.key, JSON.stringify(bodyObject));\r\n//         } else {\r\n//           Object.entries(bodyField).forEach(([key, type]) => {\r\n//             if (type === \"file\" && files[key]) {\r\n//               formBody.append(key, files[key]);\r\n//             } else if (formData[key] !== undefined) {\r\n//               formBody.append(key, formData[key]);\r\n//             }\r\n//           });\r\n//         }\r\n//       });\r\n//     }\r\n\r\n//     const token = localStorage.getItem(\"token\");\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": frame.body ? \"multipart/form-data\" : \"application/json\",\r\n//         Authorization: `Bearer ${token}`,\r\n//       },\r\n//     };\r\n\r\n//     try {\r\n//       let response;\r\n//       switch (method) {\r\n//         case \"post\":\r\n//           response = await axios.post(url, formBody, config);\r\n//           break;\r\n//         case \"patch\":\r\n//           response = await axios.patch(url, formBody, config);\r\n//           break;\r\n//         case \"put\":\r\n//           response = await axios.put(url, formBody, config);\r\n//           break;\r\n//         case \"delete\":\r\n//           response = await axios.delete(url, config);\r\n//           break;\r\n//         default:\r\n//           console.error(\"Unsupported method:\", method);\r\n//           return;\r\n//       }\r\n\r\n//       console.log(\"Success:\", response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const renderFields = () => {\r\n//     const fields = [];\r\n\r\n//     // Render fields from frame.param\r\n//     if (frame.param) {\r\n//       frame.param.forEach((param) => {\r\n//         Object.entries(param).forEach(([key, type]) => {\r\n//           fields.push(\r\n//             <div key={key}>\r\n//               <label>{key}</label>\r\n//               <input\r\n//                 type={type}\r\n//                 value={type === \"checkbox\" ? false : formData[key] || \"\"}\r\n//                 onChange={(e) => handleInputChange(key, e.target.value)}\r\n//               />\r\n//             </div>\r\n//           );\r\n//         });\r\n//       });\r\n//     }\r\n\r\n//     // Render fields from frame.body\r\n//     if (frame.body) {\r\n//       frame.body.forEach((bodyField) => {\r\n//         if (bodyField.key) {\r\n//           const valueObject = Object.fromEntries(\r\n//             Object.entries(bodyField).filter(([key]) => key !== \"key\")\r\n//           );\r\n//           Object.keys(valueObject).forEach((key) => {\r\n//             fields.push(\r\n//               <>\r\n//                 {valueObject[key] === \"huh\" ? (\r\n//                   <></>\r\n//                 ) : (\r\n//                   <div key={key}>\r\n//                     <label>{key}</label>\r\n//                     <input\r\n//                       type={\r\n//                         valueObject[key] === \"textArea\" ? \"textarea\" : \"text\"\r\n//                       }\r\n//                       value={formData[key] || \"\"}\r\n//                       onChange={(e) => handleInputChange(key, e.target.value)}\r\n//                     />\r\n//                   </div>\r\n//                 )}\r\n//               </>\r\n//             );\r\n//           });\r\n//         } else {\r\n//           Object.entries(bodyField).forEach(([key, type]) => {\r\n//             fields.push(\r\n//               <div key={key}>\r\n//                 <label>{key}</label>\r\n//                 {type === \"file\" ? (\r\n//                   <input\r\n//                     type=\"file\"\r\n//                     onChange={(e) => handleFileChange(key, e.target.files[0])}\r\n//                   />\r\n//                 ) : type === \"huh\" ? (\r\n//                   <br />\r\n//                 ) : (\r\n//                   <input\r\n//                     type={type}\r\n//                     value={formData[key] || \"\"}\r\n//                     onChange={(e) => handleInputChange(key, e.target.value)}\r\n//                   />\r\n//                 )}\r\n//               </div>\r\n//             );\r\n//           });\r\n//         }\r\n//       });\r\n//     }\r\n\r\n//     return fields;\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit}>\r\n//       <h4>Dynamic Form</h4>\r\n//       {renderFields()}\r\n//       <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default DynamicForm;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { submitFrame } from \"./Modal/input/frame\";\r\n\r\nconst DynamicForm = ({ frame, data = null, send = null, type = null }) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [files, setFiles] = useState({});\r\n\r\n  // Initialize formData with inherited data\r\n  useEffect(() => {\r\n    if (data) {\r\n      setFormData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleInputChange = (key, value) => {\r\n    setFormData((prev) => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const handleFileChange = (key, file) => {\r\n    setFiles((prev) => ({ ...prev, [key]: file }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let url = frame.url || \"http://127.0.0.1:8000\";\r\n    const formBody = new FormData();\r\n    const method = frame.type || \"post\";\r\n\r\n    if (frame.param) {\r\n      const queryParams = frame.param\r\n        .map((param) =>\r\n          Object.entries(param)\r\n            .map(([key]) => `${key}=${encodeURIComponent(formData[key] || \"\")}`)\r\n            .join(\"&\")\r\n        )\r\n        .join(\"&\");\r\n\r\n      if (queryParams) url += `?${queryParams}`;\r\n    }\r\n\r\n    if (frame.body) {\r\n      frame.body.forEach((bodyField) => {\r\n        if (bodyField.key) {\r\n          const valueObject = Object.fromEntries(\r\n            Object.entries(bodyField).filter(([key]) => key !== \"key\")\r\n          );\r\n\r\n          const bodyObject = {\r\n            ...Object.fromEntries(\r\n              Object.entries(valueObject).map(([key]) => [\r\n                key,\r\n                formData[key] || \"\",\r\n              ])\r\n            ),\r\n          };\r\n\r\n          // Handle related_laboratory logic\r\n          if (bodyField.related_laboratory) {\r\n            const { research_id, laboratory_id } = formData;\r\n\r\n            if (laboratory_id) {\r\n              bodyObject.related_laboratory = {\r\n                LID: laboratory_id,\r\n                related_research: research_id ? { RID: research_id } : null,\r\n              };\r\n            } else {\r\n              bodyObject.related_laboratory = null;\r\n            }\r\n          }\r\n          formBody.append(bodyField.key, JSON.stringify(bodyObject));\r\n        } else {\r\n          Object.entries(bodyField).forEach(([key, type]) => {\r\n            if (type === \"file\" && files[key]) {\r\n              formBody.append(key, files[key]);\r\n            } else if (formData[key] !== undefined) {\r\n              formBody.append(key, formData[key]);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": frame.body ? \"multipart/form-data\" : \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      let response;\r\n      switch (method) {\r\n        case \"post\":\r\n          response = await axios.post(url, formBody, config);\r\n\r\n          break;\r\n        case \"patch\":\r\n          response = await axios.patch(url, formBody, config);\r\n          break;\r\n        case \"put\":\r\n          response = await axios.put(url, formBody, config);\r\n          break;\r\n        case \"delete\":\r\n          response = await axios.delete(url, config);\r\n          break;\r\n        default:\r\n          console.error(\"Unsupported method:\", method);\r\n          return;\r\n      }\r\n\r\n      console.log(\"Success:\", response.data);\r\n      //hereif (send === \"Admin\" || send === \"LeadResearcher\") {\r\n      if (send === null) return;\r\n      const commitData = await getCommitData(type);\r\n\r\n      // After fetching commit data, patch if necessary\r\n      if (commitData) {\r\n        const patchData = {\r\n          ...commitData,\r\n          is_approved: true,\r\n        };\r\n        const patchUrl =\r\n          type === \"event\"\r\n            ? submitFrame.submitEvent.url\r\n            : submitFrame.submitNews.url;\r\n        const patchParam =\r\n          type === \"event\"\r\n            ? { event_id: commitData.event_id }\r\n            : { news_id: commitData.news_id };\r\n\r\n        // Send patch request\r\n        await axios.patch(patchUrl, patchData, {\r\n          params: patchParam,\r\n          headers: config.headers,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n  const getCommitData = async (type) => {\r\n    const path =\r\n      type === \"event\"\r\n        ? `http://127.0.0.1:8000/lead_researcher/event/commit`\r\n        : `http://127.0.0.1:8000/lead_researcher/news/commit`;\r\n\r\n    try {\r\n      const response = await axios.get(path, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      // Filter commit data based on NID (News ID) or EID (Event ID)\r\n      const commitData =\r\n        type === \"event\"\r\n          ? response.data.find((item) => item.event_id === formData.event_id)\r\n          : response.data.find((item) => item.news_id === formData.news_id);\r\n\r\n      return commitData;\r\n    } catch (error) {\r\n      console.error(\"Error fetching commit data:\", error);\r\n    }\r\n  };\r\n  const renderFields = () => {\r\n    const fields = [];\r\n\r\n    // Render fields from frame.param\r\n    if (frame.param) {\r\n      frame.param.forEach((param) => {\r\n        Object.entries(param).forEach(([key, type]) => {\r\n          fields.push(\r\n            <div key={key}>\r\n              <label>{key}</label>\r\n              <input\r\n                type={type}\r\n                value={\r\n                  type === \"checkbox\"\r\n                    ? formData[key] || false\r\n                    : formData[key] || \"\"\r\n                }\r\n                onChange={(e) =>\r\n                  handleInputChange(\r\n                    key,\r\n                    type === \"checkbox\" ? e.target.checked : e.target.value\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n          );\r\n        });\r\n      });\r\n    }\r\n\r\n    // Render fields from frame.body\r\n    if (frame.body) {\r\n      frame.body.forEach((bodyField) => {\r\n        if (bodyField.key) {\r\n          const valueObject = Object.fromEntries(\r\n            Object.entries(bodyField).filter(([key]) => key !== \"key\")\r\n          );\r\n          Object.keys(valueObject).forEach((key) => {\r\n            fields.push(\r\n              <div key={key}>\r\n                <label>{key}</label>\r\n                <input\r\n                  type={valueObject[key] === \"textArea\" ? \"textarea\" : \"text\"}\r\n                  value={formData[key] || \"\"}\r\n                  onChange={(e) => handleInputChange(key, e.target.value)}\r\n                />\r\n              </div>\r\n            );\r\n          });\r\n        } else {\r\n          Object.entries(bodyField).forEach(([key, type]) => {\r\n            fields.push(\r\n              <div key={key}>\r\n                <label>{key}</label>\r\n                {type === \"file\" ? (\r\n                  <input\r\n                    type=\"file\"\r\n                    onChange={(e) => handleFileChange(key, e.target.files[0])}\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    type={type}\r\n                    value={formData[key] || \"\"}\r\n                    onChange={(e) => handleInputChange(key, e.target.value)}\r\n                  />\r\n                )}\r\n              </div>\r\n            );\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return fields;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h4>Dynamic Form</h4>\r\n      {renderFields()}\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DynamicForm;\r\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC,IAAI,GAAG,IAAI;EAAEC,IAAI,GAAG,IAAI;EAAEC,IAAI,GAAG;AAAK,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,QAAQ,EAAEC,WAAW,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}