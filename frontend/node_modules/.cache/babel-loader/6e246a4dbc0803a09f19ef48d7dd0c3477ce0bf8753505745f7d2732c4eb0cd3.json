{"ast":null,"code":"// src/redux/modalSlice.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isOpen: false,\n  isSpecificOpen: false,\n  specificTypeAndIDAndData: [null, null, null],\n  isCommit: false,\n  dataAfterCreate: null,\n  isSuccess: [null, null],\n  //\n  selectedImage: null,\n  // bodyText: \"\",\n  isCreate: null,\n  isPreview: false,\n  currentFormData: null,\n  openedDropdown: null,\n  savedFormDataArr: [],\n  stackedFormDataArr: [],\n  createTopic: null\n  //currentPath in main-Slice use also here\n};\nconst editSlice = createSlice({\n  name: \"edit\",\n  initialState,\n  reducers: {\n    openModal: state => {\n      state.isOpen = true;\n      state.isSpecificOpen = false;\n    },\n    closeModal: state => {\n      state.isOpen = false;\n    },\n    setIsSuccess: (state, action) => {\n      state.isSuccess = action.payload;\n    },\n    openSpecificModal: (state, action) => {\n      state.isSpecificOpen = true;\n      state.isOpen = false;\n      state.specificTypeAndIDAndData = action.payload;\n      console.log(\"open modal\");\n      console.log(state.specificTypeAndIDAndData);\n    },\n    closeSpecificModal: state => {\n      console.log(\"closeSpecificModal\");\n      return initialState;\n    },\n    setTypeNull: state => {\n      state.specificTypeAndIDAndData[0] = null;\n    },\n    isSpecificClose: state => {\n      state.isSpecificOpen = false;\n    },\n    resetSpecificTypeAndIDAndData: state => {\n      state.specificTypeAndIDAndData = null;\n    },\n    isCommit: (state, action) => {\n      state.isCommit = action.payload;\n    },\n    resetIsCommit: state => {\n      state.isCommit = false;\n    },\n    changeDataAfterCreate: (state, action) => {\n      state.dataAfterCreate = action.payload;\n    },\n    reset: () => {\n      console.log(\"reset\");\n      return initialState;\n    },\n    creating: state => {\n      state.isCreate = true;\n    },\n    editing: state => {\n      state.isCreate = false;\n    },\n    setImage: (state, action) => {\n      state.selectedImage = action.payload;\n    },\n    clearImage: state => {\n      state.selectedImage = null;\n    },\n    currentDropdown: (state, action) => {\n      state.openedDropdown = action.payload;\n    },\n    //   clearEditState:(state)=>{\n\n    //     isOpen: false,\n    // selectedImage: null,\n    // // bodyText: \"\",\n    // isCreate: null,\n    // isPreview: false,\n    // currentFormData: null,\n    // openedDropdown: null,\n    //   },\n    //   resetEditState: (state) =>{  openedDropdown: null,  selectedImage: null,\n\n    //   },\n\n    closeStackedArr: state => {\n      const lastIndex = state.stackedFormDataArr.length - 1;\n      if (lastIndex >= 0) {\n        state.stackedFormDataArr[lastIndex] -= 1;\n      }\n    },\n    openNewStack: (state, action) => {\n      state.stackedFormDataArr = [...state.stackedFormDataArr, action.payload];\n    },\n    setCreateTopic: (state, action) => {\n      state.createTopic = action.payload;\n    }\n  }\n});\nexport const editAction = editSlice.actions;\nexport default editSlice;","map":{"version":3,"names":["createSlice","initialState","isOpen","isSpecificOpen","specificTypeAndIDAndData","isCommit","dataAfterCreate","isSuccess","selectedImage","isCreate","isPreview","currentFormData","openedDropdown","savedFormDataArr","stackedFormDataArr","createTopic","editSlice","name","reducers","openModal","state","closeModal","setIsSuccess","action","payload","openSpecificModal","console","log","closeSpecificModal","setTypeNull","isSpecificClose","resetSpecificTypeAndIDAndData","resetIsCommit","changeDataAfterCreate","reset","creating","editing","setImage","clearImage","currentDropdown","closeStackedArr","lastIndex","length","openNewStack","setCreateTopic","editAction","actions"],"sources":["D:/project/SE-LABS-Website/frontend/src/store/edit-slice.js"],"sourcesContent":["// src/redux/modalSlice.js\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n  isSpecificOpen: false,\r\n  specificTypeAndIDAndData: [null, null, null],\r\n  isCommit: false,\r\n  dataAfterCreate: null,\r\n  isSuccess: [null, null],\r\n  //\r\n  selectedImage: null,\r\n  // bodyText: \"\",\r\n  isCreate: null,\r\n  isPreview: false,\r\n  currentFormData: null,\r\n  openedDropdown: null,\r\n  savedFormDataArr: [],\r\n  stackedFormDataArr: [],\r\n  createTopic: null,\r\n  //currentPath in main-Slice use also here\r\n};\r\n\r\nconst editSlice = createSlice({\r\n  name: \"edit\",\r\n  initialState,\r\n  reducers: {\r\n    openModal: (state) => {\r\n      state.isOpen = true;\r\n      state.isSpecificOpen = false;\r\n    },\r\n    closeModal: (state) => {\r\n      state.isOpen = false;\r\n    },\r\n    setIsSuccess: (state, action) => {\r\n      state.isSuccess = action.payload;\r\n    },\r\n    openSpecificModal: (state, action) => {\r\n      state.isSpecificOpen = true;\r\n      state.isOpen = false;\r\n\r\n      state.specificTypeAndIDAndData = action.payload;\r\n      console.log(\"open modal\");\r\n\r\n      console.log(state.specificTypeAndIDAndData);\r\n    },\r\n    closeSpecificModal: (state) => {\r\n      console.log(\"closeSpecificModal\");\r\n      return initialState;\r\n    },\r\n    setTypeNull: (state) => {\r\n      state.specificTypeAndIDAndData[0] = null;\r\n    },\r\n    isSpecificClose: (state) => {\r\n      state.isSpecificOpen = false;\r\n    },\r\n    resetSpecificTypeAndIDAndData: (state) => {\r\n      state.specificTypeAndIDAndData = null;\r\n    },\r\n    isCommit: (state, action) => {\r\n      state.isCommit = action.payload;\r\n    },\r\n    resetIsCommit: (state) => {\r\n      state.isCommit = false;\r\n    },\r\n\r\n    changeDataAfterCreate: (state, action) => {\r\n      state.dataAfterCreate = action.payload;\r\n    },\r\n\r\n    reset: () => {\r\n      console.log(\"reset\");\r\n\r\n      return initialState;\r\n    },\r\n    creating: (state) => {\r\n      state.isCreate = true;\r\n    },\r\n    editing: (state) => {\r\n      state.isCreate = false;\r\n    },\r\n\r\n    setImage: (state, action) => {\r\n      state.selectedImage = action.payload;\r\n    },\r\n    clearImage: (state) => {\r\n      state.selectedImage = null;\r\n    },\r\n    currentDropdown: (state, action) => {\r\n      state.openedDropdown = action.payload;\r\n    },\r\n    //   clearEditState:(state)=>{\r\n\r\n    //     isOpen: false,\r\n    // selectedImage: null,\r\n    // // bodyText: \"\",\r\n    // isCreate: null,\r\n    // isPreview: false,\r\n    // currentFormData: null,\r\n    // openedDropdown: null,\r\n    //   },\r\n    //   resetEditState: (state) =>{  openedDropdown: null,  selectedImage: null,\r\n\r\n    //   },\r\n\r\n    closeStackedArr: (state) => {\r\n      const lastIndex = state.stackedFormDataArr.length - 1;\r\n      if (lastIndex >= 0) {\r\n        state.stackedFormDataArr[lastIndex] -= 1;\r\n      }\r\n    },\r\n    openNewStack: (state, action) => {\r\n      state.stackedFormDataArr = [...state.stackedFormDataArr, action.payload];\r\n    },\r\n    setCreateTopic: (state, action) => {\r\n      state.createTopic = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const editAction = editSlice.actions;\r\nexport default editSlice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}