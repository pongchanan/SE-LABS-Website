{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\SE-LABS-Website\\\\frontend\\\\src\\\\component\\\\admin-Component\\\\Modal\\\\Modal-Frame-2.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createPortal } from \"react-dom\";\nimport { editAction } from \"store/edit-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModalFrame2({\n  children\n}) {\n  _s();\n  const dispatch = useDispatch();\n\n  // Use selector to access modal state from the Redux store\n  let isOpen = useSelector(state => {\n    // console.log(\"Modal open state:\", state.editSlice.isSpecificOpen);\n    return state.editSlice.isSpecificOpen;\n  });\n  const specificTypeAndID = useSelector(state => {\n    // console.log(\"Redux state:\", state);\n    return state.editSlice.specificTypeAndID;\n  });\n  useEffect(() => {\n    const modal = document.getElementById(\"modalDialog\");\n    if (isOpen) {\n      console.log(\"Opening modal...\");\n      modal.showModal();\n    } else {\n      console.log(\"Closing modal...\");\n      modal.close();\n    }\n    return () => modal && modal.close();\n  }, [isOpen]);\n  return /*#__PURE__*/createPortal(/*#__PURE__*/_jsxDEV(\"dialog\", {\n    id: \"modalDialog\",\n    className: \"relative w-full bg-white p-6 rounded-xl max-h-[90vh] max-w-[45vw] overflow-y-auto\",\n    onClose: () => {\n      dispatch(editAction.isSpecificClose());\n      dispatch(editAction.resetSpecificTypeAndIDAndData());\n      dispatch(editAction.resetIsCommit());\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), document.getElementById(\"modal\"));\n}\n_s(ModalFrame2, \"p6VzWngEXsFLSZEyRfEqP++jy/U=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = ModalFrame2;\nvar _c;\n$RefreshReg$(_c, \"ModalFrame2\");","map":{"version":3,"names":["useEffect","useSelector","useDispatch","createPortal","editAction","jsxDEV","_jsxDEV","ModalFrame2","children","_s","dispatch","isOpen","state","editSlice","isSpecificOpen","specificTypeAndID","modal","document","getElementById","console","log","showModal","close","id","className","onClose","isSpecificClose","resetSpecificTypeAndIDAndData","resetIsCommit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/project/SE-LABS-Website/frontend/src/component/admin-Component/Modal/Modal-Frame-2.jsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { editAction } from \"store/edit-slice\";\r\n\r\nexport default function ModalFrame2({ children }) {\r\n  const dispatch = useDispatch();\r\n\r\n  // Use selector to access modal state from the Redux store\r\n  let isOpen = useSelector((state) => {\r\n    // console.log(\"Modal open state:\", state.editSlice.isSpecificOpen);\r\n    return state.editSlice.isSpecificOpen;\r\n  });\r\n\r\n  const specificTypeAndID = useSelector((state) => {\r\n    // console.log(\"Redux state:\", state);\r\n    return state.editSlice.specificTypeAndID;\r\n  });\r\n\r\n  useEffect(() => {\r\n    const modal = document.getElementById(\"modalDialog\");\r\n    if (isOpen) {\r\n      console.log(\"Opening modal...\");\r\n      modal.showModal();\r\n    } else {\r\n      console.log(\"Closing modal...\");\r\n      modal.close();\r\n    }\r\n    return () => modal && modal.close();\r\n  }, [isOpen]);\r\n\r\n  return createPortal(\r\n    <dialog\r\n      id=\"modalDialog\"\r\n      className=\"relative w-full bg-white p-6 rounded-xl max-h-[90vh] max-w-[45vw] overflow-y-auto\"\r\n      onClose={() => {\r\n        dispatch(editAction.isSpecificClose());\r\n        dispatch(editAction.resetSpecificTypeAndIDAndData());\r\n        dispatch(editAction.resetIsCommit());\r\n      }}\r\n    >\r\n      {children}\r\n    </dialog>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,QAAQ,WAAW;AACxC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,WAAWA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAIS,MAAM,GAAGV,WAAW,CAAEW,KAAK,IAAK;IAClC;IACA,OAAOA,KAAK,CAACC,SAAS,CAACC,cAAc;EACvC,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAGd,WAAW,CAAEW,KAAK,IAAK;IAC/C;IACA,OAAOA,KAAK,CAACC,SAAS,CAACE,iBAAiB;EAC1C,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACd,MAAMgB,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IACpD,IAAIP,MAAM,EAAE;MACVQ,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BJ,KAAK,CAACK,SAAS,CAAC,CAAC;IACnB,CAAC,MAAM;MACLF,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;MAC/BJ,KAAK,CAACM,KAAK,CAAC,CAAC;IACf;IACA,OAAO,MAAMN,KAAK,IAAIA,KAAK,CAACM,KAAK,CAAC,CAAC;EACrC,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZ,oBAAOR,YAAY,cACjBG,OAAA;IACEiB,EAAE,EAAC,aAAa;IAChBC,SAAS,EAAC,mFAAmF;IAC7FC,OAAO,EAAEA,CAAA,KAAM;MACbf,QAAQ,CAACN,UAAU,CAACsB,eAAe,CAAC,CAAC,CAAC;MACtChB,QAAQ,CAACN,UAAU,CAACuB,6BAA6B,CAAC,CAAC,CAAC;MACpDjB,QAAQ,CAACN,UAAU,CAACwB,aAAa,CAAC,CAAC,CAAC;IACtC,CAAE;IAAApB,QAAA,EAEDA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC,EACTf,QAAQ,CAACC,cAAc,CAAC,OAAO,CACjC,CAAC;AACH;AAACT,EAAA,CAxCuBF,WAAW;EAAA,QAChBL,WAAW,EAGfD,WAAW,EAKEA,WAAW;AAAA;AAAAgC,EAAA,GATf1B,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}