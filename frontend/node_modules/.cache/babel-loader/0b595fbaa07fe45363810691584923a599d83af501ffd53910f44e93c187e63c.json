{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\SE-LABS-Website\\\\src\\\\component\\\\admin-Component\\\\try-form.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { submitFrame } from \"./Modal/input/frame\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DynamicForm = ({\n  frame,\n  data = null,\n  type = null\n}) => {\n  _s();\n  const [formData, setFormData] = useState({});\n  const [files, setFiles] = useState({});\n  console.log(\"DynamicForm\", type);\n  // Initialize formData with inherited data\n  useEffect(() => {\n    if (data) {\n      setFormData(data);\n    }\n  }, [data]);\n  const handleInputChange = (key, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const handleFileChange = (key, file) => {\n    setFiles(prev => ({\n      ...prev,\n      [key]: file\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let url = frame.url || \"http://127.0.0.1:8000\";\n    const formBody = new FormData();\n    const method = frame.type || \"post\";\n\n    // Construct queryParams for URL if frame.param exists\n    if (frame.param) {\n      const queryParams = frame.param.map(param => {\n        if (param.key) {\n          // Convert object-like values to JSON strings\n          const valueObject = Object.fromEntries(Object.entries(param).filter(([key]) => key !== \"key\"));\n          const value = JSON.stringify(Object.fromEntries(Object.entries(valueObject).map(([key, type]) => [key, formData[key] || \"\"])));\n          return `${param.key}=${encodeURIComponent(value)}`;\n        }\n        return Object.keys(param).map(key => {\n          if (formData[key]) {\n            return `${key}=${encodeURIComponent(formData[key] || \"\")}`;\n          } else {\n            return \"\";\n          }\n        }).join(\"&\");\n      }).join(\"&\");\n      if (queryParams) url += `?${queryParams}`;\n    }\n    console.log(url);\n    // Append form data to FormData object from frame.body\n    if (frame.body) {\n      frame.body.forEach(bodyField => {\n        if (bodyField.key) {\n          const valueObject = Object.fromEntries(Object.entries(bodyField).filter(([key]) => key !== \"key\"));\n          const bodyObject = {\n            ...Object.fromEntries(Object.entries(valueObject).map(([key]) => [key, formData[key] || \"\"]))\n          };\n\n          // Handle related_laboratory logic\n          if (bodyField.related_laboratory) {\n            const {\n              research_id,\n              laboratory_id\n            } = formData;\n            if (laboratory_id) {\n              bodyObject.related_laboratory = {\n                LID: laboratory_id,\n                related_research: research_id ? {\n                  RID: research_id\n                } : null\n              };\n            } else {\n              bodyObject.related_laboratory = null;\n            }\n          }\n          formBody.append(bodyField.key, JSON.stringify(bodyObject));\n        } else {\n          // For fields that are not related to keys, append to FormData\n          Object.entries(bodyField).forEach(([key, type]) => {\n            if (type === \"file\" && files[key]) {\n              formBody.append(key, files[key]);\n            } else if (formData[key] !== undefined) {\n              formBody.append(key, formData[key]);\n            }\n          });\n        }\n      });\n    }\n    const token = localStorage.getItem(\"token\");\n    const config = {\n      headers: {\n        \"Content-Type\": frame.body ? \"multipart/form-data\" : \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    };\n    try {\n      let response;\n      // Dynamically handle request methods (POST, PATCH, PUT, DELETE)\n      switch (method) {\n        case \"post\":\n          response = await axios.post(url, formBody, config);\n          break;\n        case \"patch\":\n          response = await axios.patch(url, formBody, config);\n          break;\n        case \"put\":\n          response = await axios.put(url, formBody, config);\n          break;\n        case \"delete\":\n          response = await axios.delete(url, config);\n          break;\n        default:\n          console.error(\"Unsupported method:\", method);\n          return;\n      }\n      console.log(\"wat??\", type);\n      console.log(\"Success:\", response.data);\n      if (response.status === 200) {\n        console.log(\"wat\");\n        if (type !== null) {\n          const commitData = await getCommitData(type);\n          console.log(\"wat2\");\n          if (commitData) {\n            const patchData = {\n              ...commitData,\n              is_approved: true\n            };\n            const patchUrl = type === \"event\" ? submitFrame.submitEvent.url : submitFrame.submitNews.url;\n            const patchParam = type === \"event\" ? {\n              event_id: commitData.event_id\n            } : {\n              news_id: commitData.news_id\n            };\n            await axios.patch(`${patchUrl}/${patchUrl}`, {}, {\n              params: patchParam,\n              headers: config.headers\n            });\n          }\n        }\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const getCommitData = async type => {\n    const path = type === \"event\" ? `http://127.0.0.1:8000/lead_researcher/event/commit` : `http://127.0.0.1:8000/lead_researcher/news/commit`;\n    try {\n      const response = await axios.get(path, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      const commitData = type === \"event\" ? response.data.find(item => item.event_id === formData.event_id) : response.data.find(item => item.news_id === formData.news_id);\n      console.log(commitData);\n      return commitData;\n    } catch (error) {\n      console.error(\"Error fetching commit data:\", error);\n    }\n  };\n  const renderFields = () => {\n    const fields = [];\n\n    // Render fields from frame.param\n    if (frame.param) {\n      frame.param.forEach(param => {\n        Object.entries(param).forEach(([key, type]) => {\n          fields.push(/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: type,\n              value: type === \"checkbox\" ? formData[key] || false : formData[key] || \"\",\n              onChange: e => handleInputChange(key, type === \"checkbox\" ? e.target.checked : e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this));\n        });\n      });\n    }\n\n    // Render fields from frame.body\n    if (frame.body) {\n      frame.body.forEach(bodyField => {\n        if (bodyField.key) {\n          const valueObject = Object.fromEntries(Object.entries(bodyField).filter(([key]) => key !== \"key\"));\n          Object.keys(valueObject).forEach(key => {\n            fields.push(/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: valueObject[key] === \"textArea\" ? \"textarea\" : \"text\",\n                value: formData[key] || \"\",\n                onChange: e => handleInputChange(key, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this));\n          });\n        } else {\n          Object.entries(bodyField).forEach(([key, type]) => {\n            fields.push(/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), type === \"file\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: e => handleFileChange(key, e.target.files[0])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                type: type,\n                value: formData[key] || \"\",\n                onChange: e => handleInputChange(key, e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this));\n          });\n        }\n      });\n    }\n    return fields;\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Dynamic Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), renderFields(), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n};\n_s(DynamicForm, \"osExPLxz8VslMLMz/AYt5kYA12o=\");\n_c = DynamicForm;\nexport default DynamicForm;\n\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const DynamicForm = ({ frame }) => {\n//   const [formData, setFormData] = useState({});\n//   const [files, setFiles] = useState({});\n\n//   // Handle text and textarea input changes\n//   const handleInputChange = (key, value) => {\n//     setFormData((prev) => ({ ...prev, [key]: value }));\n//   };\n\n//   // Handle file input changes\n//   const handleFileChange = (key, file) => {\n//     setFiles((prev) => ({ ...prev, [key]: file }));\n//   };\n\n//   // Handle form submission\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     let url = frame.url || \"http://127.0.0.1:8000\";\n//     const formBody = new FormData();\n\n//     // Build query parameters\n//     if (frame.param) {\n//       const queryParams = frame.param\n//         .map((param) => {\n//           if (param.key) {\n//             // Convert object-like values to JSON strings\n//             const valueObject = Object.fromEntries(\n//               Object.entries(param).filter(([key]) => key !== \"key\")\n//             );\n//             const value = JSON.stringify(\n//               Object.fromEntries(\n//                 Object.entries(valueObject).map(([key, type]) => [\n//                   key,\n//                   formData[key] || \"\",\n//                 ])\n//               )\n//             );\n//             return `${param.key}=${encodeURIComponent(value)}`;\n//           }\n//           return Object.keys(param)\n//             .map((key) => `${key}=${encodeURIComponent(formData[key] || \"\")}`)\n//             .join(\"&\");\n//         })\n//         .join(\"&\");\n//       url += `?${queryParams}`;\n//     }\n\n//     // Build body\n//     if (frame.body) {\n//       frame.body.forEach((bodyField) => {\n//         if (bodyField.key) {\n//           const valueObject = Object.fromEntries(\n//             Object.entries(bodyField).filter(([key]) => key !== \"key\")\n//           );\n\n//           // Handle related_laboratory if defined\n//           const relatedLaboratory =\n//             valueObject.related_laboratory !== undefined\n//               ? {\n//                   LID: formData.LID || \"\",\n//                   related_research: { RID: formData.RID || \"\" },\n//                 }\n//               : undefined;\n\n//           const bodyObject = {\n//             ...Object.fromEntries(\n//               Object.entries(valueObject).map(([key, type]) => [\n//                 key,\n//                 formData[key] || \"\",\n//               ])\n//             ),\n//             ...(relatedLaboratory\n//               ? { related_laboratory: relatedLaboratory }\n//               : {}),\n//           };\n\n//           formBody.append(bodyField.key, JSON.stringify(bodyObject));\n//         } else {\n//           Object.entries(bodyField).forEach(([key, type]) => {\n//             if (type === \"file\" && files[key]) {\n//               formBody.append(key, files[key]);\n//             } else if (formData[key]) {\n//               formBody.append(key, formData[key]);\n//             }\n//           });\n//         }\n//       });\n//     }\n\n//     const token = localStorage.getItem(\"token\");\n\n//     const config = {\n//       headers: {\n//         \"Content-Type\": \"multipart/form-data\",\n//         Authorization: `Bearer ${token}`,\n//       },\n//     };\n\n//     try {\n//       const response =\n//         frame.type === \"post\"\n//           ? await axios.post(url, formBody, config)\n//           : await axios.put(url, formBody, config);\n\n//       console.log(\"Response:\", response.data);\n//       alert(\"Form submitted successfully!\");\n//       // Optionally reset form\n//       setFormData({});\n//       setFiles({});\n//     } catch (error) {\n//       console.error(\"Error submitting form:\", error);\n//       alert(\"Error submitting form. Please try again.\");\n//     }\n//   };\n\n//   // Render the dynamic fields\n//   const renderFields = () => {\n//     const fields = [];\n\n//     // Render params\n//     if (frame.param) {\n//       frame.param.forEach((param) => {\n//         if (param.key) {\n//           const valueObject = Object.fromEntries(\n//             Object.entries(param).filter(([key]) => key !== \"key\")\n//           );\n//           Object.keys(valueObject).forEach((fieldKey) => {\n//             fields.push(\n//               <div key={`${param.key}-${fieldKey}`} className=\"form-group\">\n//                 <label>{`${param.key} - ${fieldKey}:`}</label>\n//                 <input\n//                   type=\"text\"\n//                   value={formData[fieldKey] || \"\"}\n//                   onChange={(e) => handleInputChange(fieldKey, e.target.value)}\n//                 />\n//               </div>\n//             );\n//           });\n//         } else {\n//           Object.entries(param).forEach(([key, type]) => {\n//             fields.push(\n//               <div key={key} className=\"form-group\">\n//                 <label>{key}:</label>\n//                 <input\n//                   type=\"text\"\n//                   value={formData[key] || \"\"}\n//                   onChange={(e) => handleInputChange(key, e.target.value)}\n//                 />\n//               </div>\n//             );\n//           });\n//         }\n//       });\n//     }\n\n//     // Render body\n//     if (frame.body) {\n//       frame.body.forEach((bodyField) => {\n//         if (bodyField.key) {\n//           Object.entries(bodyField).forEach(([key, type]) => {\n//             if (key !== \"key\") {\n//               fields.push(\n//                 <div key={key} className=\"form-group\">\n//                   <label>{key}:</label>\n//                   {type === \"textArea\" ? (\n//                     <textarea\n//                       value={formData[key] || \"\"}\n//                       onChange={(e) => handleInputChange(key, e.target.value)}\n//                       required\n//                     />\n//                   ) : (\n//                     <input\n//                       type={type === \"text\" ? \"text\" : type}\n//                       value={formData[key] || \"\"}\n//                       onChange={(e) => handleInputChange(key, e.target.value)}\n//                     />\n//                   )}\n//                 </div>\n//               );\n//             }\n//           });\n//         } else {\n//           Object.entries(bodyField).forEach(([key, type]) => {\n//             fields.push(\n//               <div key={key} className=\"form-group\">\n//                 <label>{key}:</label>\n//                 <input\n//                   type={type === \"file\" ? \"file\" : \"text\"}\n//                   onChange={(e) =>\n//                     type === \"file\"\n//                       ? handleFileChange(key, e.target.files[0])\n//                       : handleInputChange(key, e.target.value)\n//                   }\n//                   required\n//                 />\n//               </div>\n//             );\n//           });\n//         }\n//       });\n//     }\n\n//     return fields;\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit} className=\"dynamic-form\">\n//       <h4>Dynamic Form</h4>\n//       {renderFields()}\n//       <button type=\"submit\">Submit</button>\n//     </form>\n//   );\n// };\n\n// export default DynamicForm;\nvar _c;\n$RefreshReg$(_c, \"DynamicForm\");","map":{"version":3,"names":["axios","submitFrame","useEffect","useState","jsxDEV","_jsxDEV","DynamicForm","frame","data","type","_s","formData","setFormData","files","setFiles","console","log","handleInputChange","key","value","prev","handleFileChange","file","handleSubmit","e","preventDefault","url","formBody","FormData","method","param","queryParams","map","valueObject","Object","fromEntries","entries","filter","JSON","stringify","encodeURIComponent","keys","join","body","forEach","bodyField","bodyObject","related_laboratory","research_id","laboratory_id","LID","related_research","RID","append","undefined","token","localStorage","getItem","config","headers","Authorization","response","post","patch","put","delete","error","status","commitData","getCommitData","patchData","is_approved","patchUrl","submitEvent","submitNews","patchParam","event_id","news_id","params","path","get","find","item","renderFields","fields","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","checked","onSubmit","_c","$RefreshReg$"],"sources":["D:/project/SE-LABS-Website/src/component/admin-Component/try-form.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { submitFrame } from \"./Modal/input/frame\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst DynamicForm = ({ frame, data = null, type = null }) => {\r\n  const [formData, setFormData] = useState({});\r\n  const [files, setFiles] = useState({});\r\n  console.log(\"DynamicForm\", type);\r\n  // Initialize formData with inherited data\r\n  useEffect(() => {\r\n    if (data) {\r\n      setFormData(data);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleInputChange = (key, value) => {\r\n    setFormData((prev) => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const handleFileChange = (key, file) => {\r\n    setFiles((prev) => ({ ...prev, [key]: file }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let url = frame.url || \"http://127.0.0.1:8000\";\r\n    const formBody = new FormData();\r\n    const method = frame.type || \"post\";\r\n\r\n    // Construct queryParams for URL if frame.param exists\r\n    if (frame.param) {\r\n      const queryParams = frame.param\r\n        .map((param) => {\r\n          if (param.key) {\r\n            // Convert object-like values to JSON strings\r\n            const valueObject = Object.fromEntries(\r\n              Object.entries(param).filter(([key]) => key !== \"key\")\r\n            );\r\n            const value = JSON.stringify(\r\n              Object.fromEntries(\r\n                Object.entries(valueObject).map(([key, type]) => [\r\n                  key,\r\n                  formData[key] || \"\",\r\n                ])\r\n              )\r\n            );\r\n            return `${param.key}=${encodeURIComponent(value)}`;\r\n          }\r\n\r\n          return Object.keys(param)\r\n            .map((key) => {\r\n              if (formData[key]) {\r\n                return `${key}=${encodeURIComponent(formData[key] || \"\")}`;\r\n              } else {\r\n                return \"\";\r\n              }\r\n            })\r\n            .join(\"&\");\r\n        })\r\n        .join(\"&\");\r\n      if (queryParams) url += `?${queryParams}`;\r\n    }\r\n    console.log(url);\r\n    // Append form data to FormData object from frame.body\r\n    if (frame.body) {\r\n      frame.body.forEach((bodyField) => {\r\n        if (bodyField.key) {\r\n          const valueObject = Object.fromEntries(\r\n            Object.entries(bodyField).filter(([key]) => key !== \"key\")\r\n          );\r\n\r\n          const bodyObject = {\r\n            ...Object.fromEntries(\r\n              Object.entries(valueObject).map(([key]) => [\r\n                key,\r\n                formData[key] || \"\",\r\n              ])\r\n            ),\r\n          };\r\n\r\n          // Handle related_laboratory logic\r\n          if (bodyField.related_laboratory) {\r\n            const { research_id, laboratory_id } = formData;\r\n\r\n            if (laboratory_id) {\r\n              bodyObject.related_laboratory = {\r\n                LID: laboratory_id,\r\n                related_research: research_id ? { RID: research_id } : null,\r\n              };\r\n            } else {\r\n              bodyObject.related_laboratory = null;\r\n            }\r\n          }\r\n\r\n          formBody.append(bodyField.key, JSON.stringify(bodyObject));\r\n        } else {\r\n          // For fields that are not related to keys, append to FormData\r\n          Object.entries(bodyField).forEach(([key, type]) => {\r\n            if (type === \"file\" && files[key]) {\r\n              formBody.append(key, files[key]);\r\n            } else if (formData[key] !== undefined) {\r\n              formBody.append(key, formData[key]);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": frame.body ? \"multipart/form-data\" : \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n\r\n    try {\r\n      let response;\r\n      // Dynamically handle request methods (POST, PATCH, PUT, DELETE)\r\n      switch (method) {\r\n        case \"post\":\r\n          response = await axios.post(url, formBody, config);\r\n          break;\r\n        case \"patch\":\r\n          response = await axios.patch(url, formBody, config);\r\n          break;\r\n        case \"put\":\r\n          response = await axios.put(url, formBody, config);\r\n          break;\r\n        case \"delete\":\r\n          response = await axios.delete(url, config);\r\n          break;\r\n        default:\r\n          console.error(\"Unsupported method:\", method);\r\n          return;\r\n      }\r\n      console.log(\"wat??\", type);\r\n\r\n      console.log(\"Success:\", response.data);\r\n      if (response.status === 200) {\r\n        console.log(\"wat\");\r\n        if (type !== null) {\r\n          const commitData = await getCommitData(type);\r\n          console.log(\"wat2\");\r\n\r\n          if (commitData) {\r\n            const patchData = {\r\n              ...commitData,\r\n              is_approved: true,\r\n            };\r\n            const patchUrl =\r\n              type === \"event\"\r\n                ? submitFrame.submitEvent.url\r\n                : submitFrame.submitNews.url;\r\n            const patchParam =\r\n              type === \"event\"\r\n                ? { event_id: commitData.event_id }\r\n                : { news_id: commitData.news_id };\r\n\r\n            await axios.patch(\r\n              `${patchUrl}/${patchUrl}`,\r\n              {},\r\n              {\r\n                params: patchParam,\r\n                headers: config.headers,\r\n              }\r\n            );\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n    }\r\n  };\r\n\r\n  const getCommitData = async (type) => {\r\n    const path =\r\n      type === \"event\"\r\n        ? `http://127.0.0.1:8000/lead_researcher/event/commit`\r\n        : `http://127.0.0.1:8000/lead_researcher/news/commit`;\r\n\r\n    try {\r\n      const response = await axios.get(path, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      const commitData =\r\n        type === \"event\"\r\n          ? response.data.find((item) => item.event_id === formData.event_id)\r\n          : response.data.find((item) => item.news_id === formData.news_id);\r\n      console.log(commitData);\r\n      return commitData;\r\n    } catch (error) {\r\n      console.error(\"Error fetching commit data:\", error);\r\n    }\r\n  };\r\n\r\n  const renderFields = () => {\r\n    const fields = [];\r\n\r\n    // Render fields from frame.param\r\n    if (frame.param) {\r\n      frame.param.forEach((param) => {\r\n        Object.entries(param).forEach(([key, type]) => {\r\n          fields.push(\r\n            <div key={key}>\r\n              <label>{key}</label>\r\n              <input\r\n                type={type}\r\n                value={\r\n                  type === \"checkbox\"\r\n                    ? formData[key] || false\r\n                    : formData[key] || \"\"\r\n                }\r\n                onChange={(e) =>\r\n                  handleInputChange(\r\n                    key,\r\n                    type === \"checkbox\" ? e.target.checked : e.target.value\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n          );\r\n        });\r\n      });\r\n    }\r\n\r\n    // Render fields from frame.body\r\n    if (frame.body) {\r\n      frame.body.forEach((bodyField) => {\r\n        if (bodyField.key) {\r\n          const valueObject = Object.fromEntries(\r\n            Object.entries(bodyField).filter(([key]) => key !== \"key\")\r\n          );\r\n          Object.keys(valueObject).forEach((key) => {\r\n            fields.push(\r\n              <div key={key}>\r\n                <label>{key}</label>\r\n                <input\r\n                  type={valueObject[key] === \"textArea\" ? \"textarea\" : \"text\"}\r\n                  value={formData[key] || \"\"}\r\n                  onChange={(e) => handleInputChange(key, e.target.value)}\r\n                />\r\n              </div>\r\n            );\r\n          });\r\n        } else {\r\n          Object.entries(bodyField).forEach(([key, type]) => {\r\n            fields.push(\r\n              <div key={key}>\r\n                <label>{key}</label>\r\n                {type === \"file\" ? (\r\n                  <input\r\n                    type=\"file\"\r\n                    onChange={(e) => handleFileChange(key, e.target.files[0])}\r\n                  />\r\n                ) : (\r\n                  <input\r\n                    type={type}\r\n                    value={formData[key] || \"\"}\r\n                    onChange={(e) => handleInputChange(key, e.target.value)}\r\n                  />\r\n                )}\r\n              </div>\r\n            );\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return fields;\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h4>Dynamic Form</h4>\r\n      {renderFields()}\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DynamicForm;\r\n\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const DynamicForm = ({ frame }) => {\r\n//   const [formData, setFormData] = useState({});\r\n//   const [files, setFiles] = useState({});\r\n\r\n//   // Handle text and textarea input changes\r\n//   const handleInputChange = (key, value) => {\r\n//     setFormData((prev) => ({ ...prev, [key]: value }));\r\n//   };\r\n\r\n//   // Handle file input changes\r\n//   const handleFileChange = (key, file) => {\r\n//     setFiles((prev) => ({ ...prev, [key]: file }));\r\n//   };\r\n\r\n//   // Handle form submission\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     let url = frame.url || \"http://127.0.0.1:8000\";\r\n//     const formBody = new FormData();\r\n\r\n//     // Build query parameters\r\n//     if (frame.param) {\r\n//       const queryParams = frame.param\r\n//         .map((param) => {\r\n//           if (param.key) {\r\n//             // Convert object-like values to JSON strings\r\n//             const valueObject = Object.fromEntries(\r\n//               Object.entries(param).filter(([key]) => key !== \"key\")\r\n//             );\r\n//             const value = JSON.stringify(\r\n//               Object.fromEntries(\r\n//                 Object.entries(valueObject).map(([key, type]) => [\r\n//                   key,\r\n//                   formData[key] || \"\",\r\n//                 ])\r\n//               )\r\n//             );\r\n//             return `${param.key}=${encodeURIComponent(value)}`;\r\n//           }\r\n//           return Object.keys(param)\r\n//             .map((key) => `${key}=${encodeURIComponent(formData[key] || \"\")}`)\r\n//             .join(\"&\");\r\n//         })\r\n//         .join(\"&\");\r\n//       url += `?${queryParams}`;\r\n//     }\r\n\r\n//     // Build body\r\n//     if (frame.body) {\r\n//       frame.body.forEach((bodyField) => {\r\n//         if (bodyField.key) {\r\n//           const valueObject = Object.fromEntries(\r\n//             Object.entries(bodyField).filter(([key]) => key !== \"key\")\r\n//           );\r\n\r\n//           // Handle related_laboratory if defined\r\n//           const relatedLaboratory =\r\n//             valueObject.related_laboratory !== undefined\r\n//               ? {\r\n//                   LID: formData.LID || \"\",\r\n//                   related_research: { RID: formData.RID || \"\" },\r\n//                 }\r\n//               : undefined;\r\n\r\n//           const bodyObject = {\r\n//             ...Object.fromEntries(\r\n//               Object.entries(valueObject).map(([key, type]) => [\r\n//                 key,\r\n//                 formData[key] || \"\",\r\n//               ])\r\n//             ),\r\n//             ...(relatedLaboratory\r\n//               ? { related_laboratory: relatedLaboratory }\r\n//               : {}),\r\n//           };\r\n\r\n//           formBody.append(bodyField.key, JSON.stringify(bodyObject));\r\n//         } else {\r\n//           Object.entries(bodyField).forEach(([key, type]) => {\r\n//             if (type === \"file\" && files[key]) {\r\n//               formBody.append(key, files[key]);\r\n//             } else if (formData[key]) {\r\n//               formBody.append(key, formData[key]);\r\n//             }\r\n//           });\r\n//         }\r\n//       });\r\n//     }\r\n\r\n//     const token = localStorage.getItem(\"token\");\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         \"Content-Type\": \"multipart/form-data\",\r\n//         Authorization: `Bearer ${token}`,\r\n//       },\r\n//     };\r\n\r\n//     try {\r\n//       const response =\r\n//         frame.type === \"post\"\r\n//           ? await axios.post(url, formBody, config)\r\n//           : await axios.put(url, formBody, config);\r\n\r\n//       console.log(\"Response:\", response.data);\r\n//       alert(\"Form submitted successfully!\");\r\n//       // Optionally reset form\r\n//       setFormData({});\r\n//       setFiles({});\r\n//     } catch (error) {\r\n//       console.error(\"Error submitting form:\", error);\r\n//       alert(\"Error submitting form. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   // Render the dynamic fields\r\n//   const renderFields = () => {\r\n//     const fields = [];\r\n\r\n//     // Render params\r\n//     if (frame.param) {\r\n//       frame.param.forEach((param) => {\r\n//         if (param.key) {\r\n//           const valueObject = Object.fromEntries(\r\n//             Object.entries(param).filter(([key]) => key !== \"key\")\r\n//           );\r\n//           Object.keys(valueObject).forEach((fieldKey) => {\r\n//             fields.push(\r\n//               <div key={`${param.key}-${fieldKey}`} className=\"form-group\">\r\n//                 <label>{`${param.key} - ${fieldKey}:`}</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={formData[fieldKey] || \"\"}\r\n//                   onChange={(e) => handleInputChange(fieldKey, e.target.value)}\r\n//                 />\r\n//               </div>\r\n//             );\r\n//           });\r\n//         } else {\r\n//           Object.entries(param).forEach(([key, type]) => {\r\n//             fields.push(\r\n//               <div key={key} className=\"form-group\">\r\n//                 <label>{key}:</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={formData[key] || \"\"}\r\n//                   onChange={(e) => handleInputChange(key, e.target.value)}\r\n//                 />\r\n//               </div>\r\n//             );\r\n//           });\r\n//         }\r\n//       });\r\n//     }\r\n\r\n//     // Render body\r\n//     if (frame.body) {\r\n//       frame.body.forEach((bodyField) => {\r\n//         if (bodyField.key) {\r\n//           Object.entries(bodyField).forEach(([key, type]) => {\r\n//             if (key !== \"key\") {\r\n//               fields.push(\r\n//                 <div key={key} className=\"form-group\">\r\n//                   <label>{key}:</label>\r\n//                   {type === \"textArea\" ? (\r\n//                     <textarea\r\n//                       value={formData[key] || \"\"}\r\n//                       onChange={(e) => handleInputChange(key, e.target.value)}\r\n//                       required\r\n//                     />\r\n//                   ) : (\r\n//                     <input\r\n//                       type={type === \"text\" ? \"text\" : type}\r\n//                       value={formData[key] || \"\"}\r\n//                       onChange={(e) => handleInputChange(key, e.target.value)}\r\n//                     />\r\n//                   )}\r\n//                 </div>\r\n//               );\r\n//             }\r\n//           });\r\n//         } else {\r\n//           Object.entries(bodyField).forEach(([key, type]) => {\r\n//             fields.push(\r\n//               <div key={key} className=\"form-group\">\r\n//                 <label>{key}:</label>\r\n//                 <input\r\n//                   type={type === \"file\" ? \"file\" : \"text\"}\r\n//                   onChange={(e) =>\r\n//                     type === \"file\"\r\n//                       ? handleFileChange(key, e.target.files[0])\r\n//                       : handleInputChange(key, e.target.value)\r\n//                   }\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//             );\r\n//           });\r\n//         }\r\n//       });\r\n//     }\r\n\r\n//     return fields;\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleSubmit} className=\"dynamic-form\">\r\n//       <h4>Dynamic Form</h4>\r\n//       {renderFields()}\r\n//       <button type=\"submit\">Submit</button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default DynamicForm;\r\n"],"mappings":"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EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX,CAAC;AAAChF,EAAA,CAvRIJ,WAAW;AAAAyF,EAAA,GAAXzF,WAAW;AAyRjB,eAAeA,WAAW;;AAE1B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAyF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}