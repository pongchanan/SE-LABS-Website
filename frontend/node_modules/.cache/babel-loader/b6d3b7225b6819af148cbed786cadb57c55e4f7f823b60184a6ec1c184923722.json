{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\SE-LABS-Website\\\\src\\\\routes\\\\user\\\\Dynamic-Event-Page.jsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport Description from \"../../component/Description/Description\";\nimport RecentEvents from \"../../component/Events/Recent-Events/Recent-Events\";\nimport RecentNews from \"../../component/News/Recent-News/Recent-News\";\nimport TopicAndImage from \"../../component/others/Big-Image/Topic-And-Image\";\nimport { getData } from \"api/api-method\";\nimport { exampleToFetchData } from \"PlaceHolder-Data/toFetch\";\nimport { useNormalQueryGet, useQueryGetImg } from \"api/custom-hooks\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DynamicEventPage() {\n  _s();\n  const {\n    id\n  } = useParams(); // Access the id from the route\n  const {\n    data,\n    isLoading\n  } = useNormalQueryGet(`http://127.0.0.1:8000/user/event/thumbnail/${id}?amount=1&page=1`, \"Event\", id);\n  const {\n    data: img,\n    isLoading: isLoading2\n  } = useQueryGetImg(`http://127.0.0.1:8000/user`, \"event\", id);\n  //lab news,lab event,lab people,lab publication,lab research\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TopicAndImage, {\n      data: data,\n      image: img,\n      isLoading: isLoading,\n      isLoading2: isLoading2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Description, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(DynamicEventPage, \"KAu/d+oL48JDZyuPsPDm3S4neWU=\", false, function () {\n  return [useParams, useNormalQueryGet, useQueryGetImg];\n});\n_c = DynamicEventPage;\nexport default DynamicEventPage;\n\n//fetch lab info, fetch image, then fetch projects etc...\nvar _c;\n$RefreshReg$(_c, \"DynamicEventPage\");","map":{"version":3,"names":["useParams","Description","RecentEvents","RecentNews","TopicAndImage","getData","exampleToFetchData","useNormalQueryGet","useQueryGetImg","jsxDEV","_jsxDEV","Fragment","_Fragment","DynamicEventPage","_s","id","data","isLoading","img","isLoading2","children","image","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/project/SE-LABS-Website/src/routes/user/Dynamic-Event-Page.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport Description from \"../../component/Description/Description\";\r\nimport RecentEvents from \"../../component/Events/Recent-Events/Recent-Events\";\r\nimport RecentNews from \"../../component/News/Recent-News/Recent-News\";\r\nimport TopicAndImage from \"../../component/others/Big-Image/Topic-And-Image\";\r\n\r\nimport { getData } from \"api/api-method\";\r\nimport { exampleToFetchData } from \"PlaceHolder-Data/toFetch\";\r\nimport { useNormalQueryGet, useQueryGetImg } from \"api/custom-hooks\";\r\n\r\nfunction DynamicEventPage() {\r\n    const { id } = useParams(); // Access the id from the route\r\n    const { data, isLoading } = useNormalQueryGet(\r\n        `http://127.0.0.1:8000/user/event/thumbnail/${id}?amount=1&page=1`,\r\n        \"Event\",\r\n        id\r\n    );\r\n    const { data: img, isLoading: isLoading2 } = useQueryGetImg(\r\n        `http://127.0.0.1:8000/user`,\r\n        \"event\",\r\n        id\r\n    );\r\n    //lab news,lab event,lab people,lab publication,lab research\r\n    return (\r\n        <>\r\n            <TopicAndImage\r\n                data={data}\r\n                image={img}\r\n                isLoading={isLoading}\r\n                isLoading2={isLoading2}\r\n            />{\" \"}\r\n            <Description data={data} />\r\n        </>\r\n    );\r\n}\r\nexport default DynamicEventPage;\r\n\r\n//fetch lab info, fetch image, then fetch projects etc...\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,WAAW,MAAM,yCAAyC;AACjE,OAAOC,YAAY,MAAM,oDAAoD;AAC7E,OAAOC,UAAU,MAAM,8CAA8C;AACrE,OAAOC,aAAa,MAAM,kDAAkD;AAE5E,SAASC,OAAO,QAAQ,gBAAgB;AACxC,SAASC,kBAAkB,QAAQ,0BAA0B;AAC7D,SAASC,iBAAiB,EAAEC,cAAc,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErE,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGf,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM;IAAEgB,IAAI;IAAEC;EAAU,CAAC,GAAGV,iBAAiB,CACzC,8CAA8CQ,EAAE,kBAAkB,EAClE,OAAO,EACPA,EACJ,CAAC;EACD,MAAM;IAAEC,IAAI,EAAEE,GAAG;IAAED,SAAS,EAAEE;EAAW,CAAC,GAAGX,cAAc,CACvD,4BAA4B,EAC5B,OAAO,EACPO,EACJ,CAAC;EACD;EACA,oBACIL,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACIV,OAAA,CAACN,aAAa;MACVY,IAAI,EAAEA,IAAK;MACXK,KAAK,EAAEH,GAAI;MACXD,SAAS,EAAEA,SAAU;MACrBE,UAAU,EAAEA;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EAAC,GAAG,eACNf,OAAA,CAACT,WAAW;MAACe,IAAI,EAAEA;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC7B,CAAC;AAEX;AAACX,EAAA,CAxBQD,gBAAgB;EAAA,QACNb,SAAS,EACIO,iBAAiB,EAKAC,cAAc;AAAA;AAAAkB,EAAA,GAPtDb,gBAAgB;AAyBzB,eAAeA,gBAAgB;;AAE/B;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}