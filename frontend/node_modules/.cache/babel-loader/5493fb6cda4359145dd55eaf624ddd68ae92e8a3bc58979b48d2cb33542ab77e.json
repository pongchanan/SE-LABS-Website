{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\SE-LABS-Website\\\\src\\\\component\\\\Buttons\\\\Filter-Btn.jsx\",\n  _s = $RefreshSig$();\nimport dropdown from \"../../resource/drop-down-filter.svg\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FilterButton({\n  fetchedLabData = [],\n  setSelectedLab\n}) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(\"Filter by Lab\");\n  const options = Array.isArray(fetchedLabData) && fetchedLabData.length > 0 ? fetchedLabData.map(item => item.Laboratory.title) : [];\n  console.log(\"fetchedLabData\", fetchedLabData);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleOptionClick = (option, index) => {\n    setSelectedOption(option);\n    setSelectedLab(fetchedLabData[index]);\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDropdown,\n      className: \"flex gap-2 justify-center items-center self-stretch px-4 py-3 my-auto bg-blue-500 text-white border  border-solid rounded-[34px] hover:bg-blue-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"self-stretch my-auto\",\n        children: selectedOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        loading: \"lazy\",\n        src: dropdown,\n        alt: \"dropdown icon\",\n        className: \"object-contain shrink-0 self-stretch my-auto w-6 aspect-square\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), isOpen && options.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"absolute z-10 mt-1 w-full bg-white border border-black rounded-lg shadow-lg overflow-hidden\",\n      children: options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleOptionClick(option, index),\n        className: \"px-4 py-2 hover:bg-gray-200 cursor-pointer\",\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), isOpen && options.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute z-10 mt-1 w-full bg-white border border-black rounded-lg shadow-lg p-4\",\n      children: \"No labs available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(FilterButton, \"OWLRrwe9C4qcWeUlGhTJZg1XpwQ=\");\n_c = FilterButton;\nexport default FilterButton;\nvar _c;\n$RefreshReg$(_c, \"FilterButton\");","map":{"version":3,"names":["dropdown","React","useState","jsxDEV","_jsxDEV","FilterButton","fetchedLabData","setSelectedLab","_s","isOpen","setIsOpen","selectedOption","setSelectedOption","options","Array","isArray","length","map","item","Laboratory","title","console","log","toggleDropdown","handleOptionClick","option","index","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","loading","src","alt","_c","$RefreshReg$"],"sources":["D:/project/SE-LABS-Website/src/component/Buttons/Filter-Btn.jsx"],"sourcesContent":["import dropdown from \"../../resource/drop-down-filter.svg\";\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nfunction FilterButton({ fetchedLabData = [], setSelectedLab }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(\"Filter by Lab\");\r\n\r\n  const options =\r\n    Array.isArray(fetchedLabData) && fetchedLabData.length > 0\r\n      ? fetchedLabData.map((item) => item.Laboratory.title)\r\n      : [];\r\n\r\n  console.log(\"fetchedLabData\", fetchedLabData);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleOptionClick = (option, index) => {\r\n    setSelectedOption(option);\r\n    setSelectedLab(fetchedLabData[index]);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <button\r\n        onClick={toggleDropdown}\r\n        className=\"flex gap-2 justify-center items-center self-stretch px-4 py-3 my-auto bg-blue-500 text-white border  border-solid rounded-[34px] hover:bg-blue-600\"\r\n      >\r\n        <span className=\"self-stretch my-auto\">{selectedOption}</span>\r\n        <img\r\n          loading=\"lazy\"\r\n          src={dropdown}\r\n          alt=\"dropdown icon\"\r\n          className=\"object-contain shrink-0 self-stretch my-auto w-6 aspect-square\"\r\n        />\r\n      </button>\r\n      {isOpen && options.length > 0 && (\r\n        <ul className=\"absolute z-10 mt-1 w-full bg-white border border-black rounded-lg shadow-lg overflow-hidden\">\r\n          {options.map((option, index) => (\r\n            <li\r\n              key={option}\r\n              onClick={() => handleOptionClick(option, index)}\r\n              className=\"px-4 py-2 hover:bg-gray-200 cursor-pointer\"\r\n            >\r\n              {option}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      {isOpen && options.length === 0 && (\r\n        <div className=\"absolute z-10 mt-1 w-full bg-white border border-black rounded-lg shadow-lg p-4\">\r\n          No labs available\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterButton;\r\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,qCAAqC;AAE1D,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAC;EAAEC,cAAc,GAAG,EAAE;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,eAAe,CAAC;EAErE,MAAMW,OAAO,GACXC,KAAK,CAACC,OAAO,CAACT,cAAc,CAAC,IAAIA,cAAc,CAACU,MAAM,GAAG,CAAC,GACtDV,cAAc,CAACW,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACC,UAAU,CAACC,KAAK,CAAC,GACnD,EAAE;EAERC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEhB,cAAc,CAAC;EAE7C,MAAMiB,cAAc,GAAGA,CAAA,KAAM;IAC3Bb,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,MAAMe,iBAAiB,GAAGA,CAACC,MAAM,EAAEC,KAAK,KAAK;IAC3Cd,iBAAiB,CAACa,MAAM,CAAC;IACzBlB,cAAc,CAACD,cAAc,CAACoB,KAAK,CAAC,CAAC;IACrChB,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;EAED,oBACEN,OAAA;IAAKuB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBxB,OAAA;MACEyB,OAAO,EAAEN,cAAe;MACxBI,SAAS,EAAC,oJAAoJ;MAAAC,QAAA,gBAE9JxB,OAAA;QAAMuB,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAEjB;MAAc;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9D7B,OAAA;QACE8B,OAAO,EAAC,MAAM;QACdC,GAAG,EAAEnC,QAAS;QACdoC,GAAG,EAAC,eAAe;QACnBT,SAAS,EAAC;MAAgE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,EACRxB,MAAM,IAAII,OAAO,CAACG,MAAM,GAAG,CAAC,iBAC3BZ,OAAA;MAAIuB,SAAS,EAAC,6FAA6F;MAAAC,QAAA,EACxGf,OAAO,CAACI,GAAG,CAAC,CAACQ,MAAM,EAAEC,KAAK,kBACzBtB,OAAA;QAEEyB,OAAO,EAAEA,CAAA,KAAML,iBAAiB,CAACC,MAAM,EAAEC,KAAK,CAAE;QAChDC,SAAS,EAAC,4CAA4C;QAAAC,QAAA,EAErDH;MAAM,GAJFA,MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL,EACAxB,MAAM,IAAII,OAAO,CAACG,MAAM,KAAK,CAAC,iBAC7BZ,OAAA;MAAKuB,SAAS,EAAC,iFAAiF;MAAAC,QAAA,EAAC;IAEjG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CAvDQH,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAyDrB,eAAeA,YAAY;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}