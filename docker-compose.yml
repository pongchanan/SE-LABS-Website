version: '3.9'

services:
    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile.backend
        image: ghcr.io/pongchanan/se-labs-website-backend
        ports:
            - '8000:8000'
        depends_on:
            db:
                condition: service_healthy
        environment:
            - URL_DATABASE=${URL_DATABASE}
            - INITIAL_ADMIN_EMAIL=${INITIAL_ADMIN_EMAIL}
            - INITIAL_ADMIN_PASSWORD=${INITIAL_ADMIN_PASSWORD}
            - INITIAL_LEAD_RESEARCHER_EMAIL=${INITIAL_LEAD_RESEARCHER_EMAIL}
            - INITIAL_LEAD_RESEARCHER_PASSWORD=${INITIAL_LEAD_RESEARCHER_PASSWORD}
            - INITIAL_RESEARCHER_EMAIL=${INITIAL_RESEARCHER_EMAIL}
            - INITIAL_RESEARCHER_PASSWORD=${INITIAL_RESEARCHER_PASSWORD}
        volumes:
            - ./backend:/usr/src/app
        networks:
            - app-network

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile.frontend
        image: ghcr.io/pongchanan/se-labs-website-frontend
        ports:
            - '3002:3000'
        environment:
            - REACT_APP_BACKEND_URL=${REACT_APP_BACKEND_URL}
        volumes:
            - ./frontend:/usr/src/app
        networks:
            - app-network

    db:
        image: postgres:17
        ports:
            - '5433:5432'
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        networks:
            - app-network
        healthcheck:
            test: ['CMD', 'pg_isready', '-U', '${POSTGRES_USER}']
            interval: 10s
            timeout: 5s
            retries: 5

volumes:
    db_data:

networks:
    app-network:
        driver: bridge
